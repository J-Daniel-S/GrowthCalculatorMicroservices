package the.best.growthvaluecalculator.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import the.best.growthvaluecalculator.templates.FixedRequest;
import the.best.growthvaluecalculator.templates.StockRequest;

@RestController
public class CalculatorController {
	
	@Autowired
	private Environment env;

	@GetMapping("/stock")
	public ResponseEntity<StockRequest> calculateStockValue(@RequestBody StockRequest stock) {
		//get stock from stock provider
		//call to 8200/params
		return ResponseEntity.ok(stock);
	}
	
	@GetMapping("/fixed/principle/{principle}/interest/{interest}/length/{length}/compound/{compound}")
	public ResponseEntity<FixedRequest> calculateFixedValue(
			@RequestParam("principle") Long principle,
			@RequestParam("interest") Double interest,
			@RequestParam("length") Integer length,
			@RequestParam("compound") Integer compound
			) {
		//call to port 8100
		String fixedAddress = env.getProperty("server.fixed");
		StringBuilder url = new StringBuilder()
				.append(fixedAddress)
				.append("/principle?").append(principle)
				.append("/interest?").append(interest)
				.append("/length?").append(length)
				.append("/compound?").append(compound);
		//"/principle?{principle}/interest?{interest}/length?{length}/compound?{compound}"
		String requestUrl = url.toString();
		System.out.println(requestUrl);
		return new RestTemplate().getForEntity(requestUrl, FixedRequest.class);

	}
	
}
